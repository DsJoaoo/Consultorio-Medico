/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import control.ControllerView;
import control.UtilCPF;
import control.UtilGeral;
import domain.Paciente;
import java.sql.SQLException;
import java.text.ParseException;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import org.hibernate.HibernateException;

/**
 *
 * @author Usuario
 */
public class DlgPesqPaciente extends javax.swing.JDialog {
    private final ControllerView gerIG;
    private Paciente paciente;

    public DlgPesqPaciente(java.awt.Frame parent, boolean modal, ControllerView gerIG) {
        super(parent, modal);
        initComponents();
        this.gerIG = gerIG;
        paciente = null;
        
              
    }
 public Paciente getPaciente() {
        return paciente;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtPesq = new javax.swing.JTextField();
        btPesquisar = new javax.swing.JButton();
        btnSelecionar = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();
        cmbOpcao = new javax.swing.JComboBox();
        btnExcluir = new javax.swing.JButton();
        btnRelatorios = new javax.swing.JButton();
        btListarTodos = new javax.swing.JButton();
        jpTabela = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtPesquisar = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Pesquisar Pacientes");
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                formComponentShown(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        getContentPane().add(txtPesq, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 60, 320, 40));

        btPesquisar.setText("Pesquisar");
        btPesquisar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btPesquisarActionPerformed(evt);
            }
        });
        getContentPane().add(btPesquisar, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 60, 80, 40));

        btnSelecionar.setText("Selecionar");
        btnSelecionar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSelecionarActionPerformed(evt);
            }
        });
        getContentPane().add(btnSelecionar, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 360, 160, 50));

        btnCancelar.setText("Cancelar");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });
        getContentPane().add(btnCancelar, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 360, 110, 50));

        cmbOpcao.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Nome", "Data Nasc", "ID", "CPF" }));
        getContentPane().add(cmbOpcao, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 60, 80, 40));

        btnExcluir.setText("Excluir");
        btnExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExcluirActionPerformed(evt);
            }
        });
        getContentPane().add(btnExcluir, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 360, 110, 50));

        btnRelatorios.setText("Relatório");
        getContentPane().add(btnRelatorios, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 360, 120, 50));

        btListarTodos.setIcon(new javax.swing.ImageIcon(getClass().getResource("/interfaces/imgs/icons/icons8-multidão-24.png"))); // NOI18N
        btListarTodos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btListarTodosActionPerformed(evt);
            }
        });
        getContentPane().add(btListarTodos, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 60, 40, 40));

        jpTabela.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED), "Pacientes", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 0, 18))); // NOI18N
        jpTabela.setLayout(new java.awt.BorderLayout());

        txtPesquisar.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "NOME", "CPF", "E-MAIL", "DATA NASCIMENTO", "SEXO", "TELEFONE"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(txtPesquisar);

        jpTabela.add(jScrollPane2, java.awt.BorderLayout.CENTER);

        getContentPane().add(jpTabela, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 110, 580, 230));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/interfaces/imgs/TelaPaciente.png"))); // NOI18N
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private boolean validarBusca(){
        String msgErro = "";
        if(txtPesq.getText().isEmpty()){
            msgErro += "Insira um valor!\n";
        }
        
        if(cmbOpcao.getSelectedIndex() == 1 && !UtilGeral.verificarFormatoData(txtPesq.getText())){
            msgErro += "Data invalida!\n";
        }
        
        if(cmbOpcao.getSelectedIndex() == 2 && !UtilGeral.isInteger(txtPesq.getText())){
            msgErro += "ID invalido!\n";
        }
        
        if(cmbOpcao.getSelectedIndex() == 3 && !UtilCPF.validarCPF(txtPesq.getText())){
            msgErro += "CPF Invalido \n";
        }
        
        if(msgErro.isEmpty()){
            return true;
        }else{
            JOptionPane.showMessageDialog(this, msgErro, "Verifique os campos e tente novamente", JOptionPane.ERROR_MESSAGE);
            return false; 
        }
    }
    
    private void btPesquisarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btPesquisarActionPerformed
        if(validarBusca()){
            try {
                List<Paciente> lista = gerIG.getGerDominio().pesquisarPaciente(txtPesq.getText(), cmbOpcao.getSelectedIndex() );

                // APAGA as linhas da tabela
                ( (DefaultTableModel) txtPesquisar.getModel() ).setNumRows(0);

                for (Paciente cli : lista ) {
                    // ADICIONAR LINHA NA TABELA        
                    ( (DefaultTableModel) txtPesquisar.getModel() ).addRow( cli.toArray() );                
                }

            
            } catch (HibernateException | ParseException  ex) {
                JOptionPane.showMessageDialog(this, ex, "ERRO ao PESQUISAR Tipo Consulta", JOptionPane.ERROR_MESSAGE  );
            } 
        }
    }//GEN-LAST:event_btPesquisarActionPerformed

    private void btnSelecionarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSelecionarActionPerformed

        int linha = txtPesquisar.getSelectedRow();
        if ( linha >= 0 ) {
            paciente = (Paciente) txtPesquisar.getValueAt(linha, 1);
        }
        else {
            JOptionPane.showMessageDialog(this,"Selecione uma linha.", "Pesquisar paciente", JOptionPane.ERROR_MESSAGE  );
        }

        this.setVisible(false);
    }//GEN-LAST:event_btnSelecionarActionPerformed

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        paciente = null;
        this.setVisible(false);
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void btnExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExcluirActionPerformed
        /*
        int linha = tblClientes.getSelectedRow();
        if ( linha >= 0 ) {

            try {
                Cliente cli = (Cliente) tblClientes.getValueAt(linha, 0);
                if ( JOptionPane.showConfirmDialog(this, "Deseja realmente excluir esse cliente?", "Título", JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION ) {
                    gerIG.getGerDominio().excluir(cli);
                    ( (DefaultTableModel) tblClientes.getModel() ).removeRow(linha);
                    JOptionPane.showMessageDialog(this, "Cliente " + cli.getNome() + " excluído com sucesso.", "ERRO ao PESQUISAR Cliente", JOptionPane.ERROR_MESSAGE  );
                }

            } catch (HibernateException ex) {
                JOptionPane.showMessageDialog(this, ex, "ERRO ao PESQUISAR Cliente", JOptionPane.ERROR_MESSAGE  );
            }
        }
        else {
            JOptionPane.showMessageDialog(this,"Selecione uma linha.", "Pesquisar cliente", JOptionPane.ERROR_MESSAGE  );
        }
        */
    }//GEN-LAST:event_btnExcluirActionPerformed

    private void formComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentShown
        try {
            gerIG.carregarTabela(txtPesquisar, Paciente.class);
        } catch (ClassNotFoundException | SQLException ex) {
            JOptionPane.showMessageDialog(this, "Erro ao carregar pacientes " + ex.getMessage() );
        }
    }//GEN-LAST:event_formComponentShown

    private void btListarTodosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btListarTodosActionPerformed
        formComponentShown(null);
        //lista todos que estão no banco
    }//GEN-LAST:event_btListarTodosActionPerformed

    
    
    
    
    
    /**
     * @param args the command line arguments
     */
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btListarTodos;
    private javax.swing.JButton btPesquisar;
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnExcluir;
    private javax.swing.JButton btnRelatorios;
    private javax.swing.JButton btnSelecionar;
    private javax.swing.JComboBox cmbOpcao;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JPanel jpTabela;
    private javax.swing.JTextField txtPesq;
    private javax.swing.JTable txtPesquisar;
    // End of variables declaration//GEN-END:variables
}
